plugin.Tx_Formhandler.settings.predef.plaintes {

	# This is the title of the predefined form shown in the dropdown box in the plugin options.
	name = Formulaire de plaintes en ligne
	debug = 0
    addErrorAnchors = 1

	# All form fields are prefixed with this values (e.g. contact[name])
	formValuesPrefix = plaintes

	langFile.1 = TEXT
	langFile.1.value = fileadmin/formhandler/plaintes/form/lang/lang.xml

	templateFile = TEXT
	templateFile.value = fileadmin/formhandler/plaintes/form/html/form.html
	
	# In case an error occurred, all markers ###is_error_[fieldname]### are filled with the configured value of the setting "default".
	isErrorMarker {
		default = error
	}
	
	# These wraps define how an error messages looks like. The message itself is set in the lang file.
    singleErrorTemplate {
        singleWrap = <span class="error_message_explanation"><span>|</span></span>
    }

    errorListTemplate {
        totalWrap = <h2 id="errors-title">###LLL:champs_erreur###</h2><ul>|</ul>
        singleWrap = <li>|</li>
    }

    markers.form_name = plaintes

	# This block defines the error checks performed when the user hits submit.
	validators {
		1.class = Validator_Default
		1.config.fieldConf {
		    nom.errorCheck.1 = required
            prenom.errorCheck.1 = required
			courriel.errorCheck.1 = required
            courriel.errorCheck.2 = email
            telephone.errorCheck.1 = required
            telephone.errorCheck.2 = pregMatch
            telephone.errorCheck.2.value = /\(?([0-9]{3})\)?([ .-]?)([0-9]{3})\2([0-9]{4})/
            dossier_part_1.errorCheck.1 = required
            dossier_part_1.errorCheck.2 = betweenLength
            dossier_part_1.errorCheck.2.minValue = 6
            dossier_part_1.errorCheck.2.maxValue = 6

            dossier_part_2.errorCheck.1 = required
            dossier_part_2.errorCheck.2 = betweenLength
            dossier_part_2.errorCheck.2.minValue = 3
            dossier_part_2.errorCheck.2.maxValue = 3

            dossier_part_3.errorCheck.1 = required
            dossier_part_3.errorCheck.2 = betweenLength
            dossier_part_3.errorCheck.2.minValue = 4
            dossier_part_3.errorCheck.2.maxValue = 4

            motifs.errorCheck.1 = required
		}
	}

	# Finishers are called after the form was submitted successfully (without errors).
	finishers {

		# Finisher_Mail sends emails to an admin and/or the user.
		1.class = Finisher_Mail
		1.config {
			checkBinaryCrLf = message
			admin {
				templateFile = TEXT
				templateFile.value = fileadmin/formhandler/plaintes/form/html/email-admin.html
				sender_email = {$formulaires.plaintes.email.admin.sender_email}
				to_email = {$formulaires.plaintes.email.admin.to_email}
				subject = TEXT
				subject.data = LLL:fileadmin/formhandler/plaintes/form/lang/lang.xml:email_admin_subject
			}
		}

		# Finisher_Redirect will redirect the user to another page after the form was submitted successfully.
		# 5.class = Finisher_SubmittedOK
		#  5.config {
        #     returns = 1
        #  }

        5.class = Finisher_Redirect
        5.config {
            redirectPage = {$formulaires.plaintes.redirect.page}
        }

	}

}